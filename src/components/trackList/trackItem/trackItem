import { render, screen, cleanup } from "@testing-library/react";
import convertMusicDuration from "libs/services/convertMusicDuration";
import { Provider } from "react-redux";
import store from "store";
import TrackItem from "./index";
import { StylesProvider } from "@chakra-ui/react";

const fakeTrack = {
  album: {
    images: [
      {
        height: 640,
        url: "https://i.scdn.co/image/ab67616d0000b2737ae2f53cf686124393716fe0",
        width: 640,
      },
      {
        height: 300,
        url: "https://i.scdn.co/image/ab67616d00001e027ae2f53cf686124393716fe0",
        width: 300,
      },
      {
        height: 64,
        url: "https://i.scdn.co/image/ab67616d000048517ae2f53cf686124393716fe0",
        width: 64,
      },
    ],
    release_date: "23-02-2018",
  },
  artists: [
    {
      name: "Blackpink",
    },
  ],

  duration_ms: 310350,
  id: "asdfhaksdja;",
  name: "Whistle",
  uri: "spotify:track:5orWOyd3hzYUIhxBs6QpdV",
};

describe("TrackItem", () => {
  beforeEach(() => {
    render(
      <StylesProvider>
        <Provider store={store}>
          <TrackItem track={fakeTrack} />
        </Provider>
      </StylesProvider>
    );
  });

  afterEach(cleanup);

  it("Tracks Item can show successfully", () => {
    const artistName = screen.getByTestId("track-artist");
    const trackName = screen.getByTestId("track-name");
    const duration = screen.getByTestId("track-duration");
    const releseDate = screen.getByTestId("track-date");

    expect(artistName).toHaveTextContent(fakeTrack.artists[0].name);
    expect(trackName).toHaveTextContent(fakeTrack.name);
    expect(duration).toHaveTextContent(
      convertMusicDuration(fakeTrack.duration_ms)
    );
    expect(releseDate).toHaveTextContent(fakeTrack.album.release_date);
  });
});
